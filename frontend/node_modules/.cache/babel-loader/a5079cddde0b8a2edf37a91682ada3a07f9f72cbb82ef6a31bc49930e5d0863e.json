{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\cloud-monitoring-dashboard\\\\frontend\\\\src\\\\CloudMetric.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CloudMetric = ({\n  title,\n  cloudService\n}) => {\n  _s();\n  const [metricData, setMetricData] = useState(null);\n  const [accessToken, setAccessToken] = useState(null);\n  useEffect(() => {\n    const fetchMetrics = async () => {\n      try {\n        if (!accessToken) {\n          if (cloudService === 'google') {\n            // Implement Google login and set accessToken\n          } else if (cloudService === 'aws') {\n            // Implement AWS login and set accessToken\n          }\n        } else {\n          const response = await axios.get(`http://localhost:5000/metrics/${cloudService}`, {\n            params: {\n              accessToken\n            },\n            withCredentials: true\n          });\n          setMetricData(response.data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching metrics:\", error);\n      }\n    };\n    fetchMetrics();\n  }, [cloudService, accessToken]);\n  if (!metricData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 27\n  }, this);\n  const data = {\n    labels: metricData.timestamps || metricData.map(point => new Date(point.timestamp).toLocaleTimeString()),\n    datasets: [{\n      label: title,\n      data: metricData.values || metricData.map(point => point.value),\n      borderColor: 'rgba(75,192,192,1)',\n      fill: false\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"metric-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(CloudMetric, \"UE/Jakhr6BWIMwFuQH82qkI24Cw=\");\n_c = CloudMetric;\nexport default CloudMetric;\nvar _c;\n$RefreshReg$(_c, \"CloudMetric\");","map":{"version":3,"names":["React","useState","useEffect","Line","axios","jsxDEV","_jsxDEV","CloudMetric","title","cloudService","_s","metricData","setMetricData","accessToken","setAccessToken","fetchMetrics","response","get","params","withCredentials","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","labels","timestamps","map","point","Date","timestamp","toLocaleTimeString","datasets","label","values","value","borderColor","fill","className","_c","$RefreshReg$"],"sources":["C:/Users/User/cloud-monitoring-dashboard/frontend/src/CloudMetric.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\n\r\nconst CloudMetric = ({ title, cloudService }) => {\r\n  const [metricData, setMetricData] = useState(null);\r\n  const [accessToken, setAccessToken] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchMetrics = async () => {\r\n      try {\r\n        if (!accessToken) {\r\n          if (cloudService === 'google') {\r\n            // Implement Google login and set accessToken\r\n          } else if (cloudService === 'aws') {\r\n            // Implement AWS login and set accessToken\r\n          }\r\n        } else {\r\n          const response = await axios.get(`http://localhost:5000/metrics/${cloudService}`, {\r\n            params: { accessToken },\r\n            withCredentials: true\r\n          });\r\n          setMetricData(response.data);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching metrics:\", error);\r\n      }\r\n    };\r\n    fetchMetrics();\r\n  }, [cloudService, accessToken]);\r\n\r\n  if (!metricData) return <div>Loading...</div>;\r\n\r\n  const data = {\r\n    labels: metricData.timestamps || metricData.map(point => new Date(point.timestamp).toLocaleTimeString()),\r\n    datasets: [\r\n      {\r\n        label: title,\r\n        data: metricData.values || metricData.map(point => point.value),\r\n        borderColor: 'rgba(75,192,192,1)',\r\n        fill: false,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"metric-container\">\r\n      <h3>{title}</h3>\r\n      <Line data={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CloudMetric;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMa,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,IAAI,CAACF,WAAW,EAAE;UAChB,IAAIJ,YAAY,KAAK,QAAQ,EAAE;YAC7B;UAAA,CACD,MAAM,IAAIA,YAAY,KAAK,KAAK,EAAE;YACjC;UAAA;QAEJ,CAAC,MAAM;UACL,MAAMO,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,iCAAiCR,YAAY,EAAE,EAAE;YAChFS,MAAM,EAAE;cAAEL;YAAY,CAAC;YACvBM,eAAe,EAAE;UACnB,CAAC,CAAC;UACFP,aAAa,CAACI,QAAQ,CAACI,IAAI,CAAC;QAC9B;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IACDN,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACN,YAAY,EAAEI,WAAW,CAAC,CAAC;EAE/B,IAAI,CAACF,UAAU,EAAE,oBAAOL,OAAA;IAAAiB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE7C,MAAMP,IAAI,GAAG;IACXQ,MAAM,EAAEjB,UAAU,CAACkB,UAAU,IAAIlB,UAAU,CAACmB,GAAG,CAACC,KAAK,IAAI,IAAIC,IAAI,CAACD,KAAK,CAACE,SAAS,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAC;IACxGC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE5B,KAAK;MACZY,IAAI,EAAET,UAAU,CAAC0B,MAAM,IAAI1B,UAAU,CAACmB,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACO,KAAK,CAAC;MAC/DC,WAAW,EAAE,oBAAoB;MACjCC,IAAI,EAAE;IACR,CAAC;EAEL,CAAC;EAED,oBACElC,OAAA;IAAKmC,SAAS,EAAC,kBAAkB;IAAAlB,QAAA,gBAC/BjB,OAAA;MAAAiB,QAAA,EAAKf;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBrB,OAAA,CAACH,IAAI;MAACiB,IAAI,EAAEA;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEV,CAAC;AAACjB,EAAA,CA/CIH,WAAW;AAAAmC,EAAA,GAAXnC,WAAW;AAiDjB,eAAeA,WAAW;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}