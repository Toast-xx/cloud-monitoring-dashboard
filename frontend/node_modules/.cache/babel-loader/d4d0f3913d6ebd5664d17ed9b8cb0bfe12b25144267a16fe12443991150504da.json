{"ast":null,"code":"import axios from 'axios';\nexport const getCloudMetrics = async (cloudService, accessToken) => {\n  try {\n    const response = await axios.get(`http://localhost:5000/metrics/${cloudService}`, {\n      params: {\n        accessToken\n      },\n      withCredentials: true\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching cloud metrics:\", error);\n    throw error;\n  }\n};\nexport const loginGoogle = () => {\n  window.location.href = 'http://localhost:5000/auth/google';\n};\nexport const loginAWS = async (username, password) => {\n  try {\n    const response = await axios.post('http://localhost:5000/auth/aws', {\n      username,\n      password\n    }, {\n      withCredentials: true\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error logging in to AWS:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","getCloudMetrics","cloudService","accessToken","response","get","params","withCredentials","data","error","console","loginGoogle","window","location","href","loginAWS","username","password","post"],"sources":["C:/Users/User/cloud-monitoring-dashboard/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const getCloudMetrics = async (cloudService, accessToken) => {\r\n  try {\r\n    const response = await axios.get(`http://localhost:5000/metrics/${cloudService}`, {\r\n      params: { accessToken },\r\n      withCredentials: true\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching cloud metrics:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const loginGoogle = () => {\r\n  window.location.href = 'http://localhost:5000/auth/google';\r\n};\r\n\r\nexport const loginAWS = async (username, password) => {\r\n  try {\r\n    const response = await axios.post('http://localhost:5000/auth/aws', { username, password }, { withCredentials: true });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error logging in to AWS:\", error);\r\n    throw error;\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAOC,YAAY,EAAEC,WAAW,KAAK;EAClE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,iCAAiCH,YAAY,EAAE,EAAE;MAChFI,MAAM,EAAE;QAAEH;MAAY,CAAC;MACvBI,eAAe,EAAE;IACnB,CAAC,CAAC;IACF,OAAOH,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,WAAW,GAAGA,CAAA,KAAM;EAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,mCAAmC;AAC5D,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACpD,IAAI;IACF,MAAMb,QAAQ,GAAG,MAAMJ,KAAK,CAACkB,IAAI,CAAC,gCAAgC,EAAE;MAAEF,QAAQ;MAAEC;IAAS,CAAC,EAAE;MAAEV,eAAe,EAAE;IAAK,CAAC,CAAC;IACtH,OAAOH,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}